#!/bin/perl
use strict;

# set initial value
my $counter = 0;
my $cbr_rate = 1;
my $total_pkg_size = 0;
my $start_time = 1;
my $end_time = 2;
my $real_start_time = 0;

# outer while loop that keeps adding crb_rate by 0.5
while ($cbr_rate < 11) {
  $counter = 0;
  # inner while loop that test each experiment multiple times
  while ($counter <= 2) {

    my $total_pkg_size = 0;
    #run NS2 simulator
    my $result=`ns ./exp1.tcl $cbr_rate Reno $start_time $end_time`;

    # result of NS2 file
    my $filename = "./exp1_Reno_".$cbr_rate.".tr";

    # open NS2 result file
    open(my $fh, '<', $filename) or die "error while opening file $filename";

    my $flag = 0;
    # read file line by line
    while (my $row = <$fh>) {
      my @elems = split ' ', $row; 
      my $event = @elems[0];
      my $event_time=@elems[1];
      my $from = @elems[2];
      my $to = @elems[3];
      my $pkg_size= @elems[5];
      my $fid = @elems[7];
      if($event == "+" && $from  == "0" && $to =="1" && $fid=="1" && not $flag && $event_time > $start_time) {
        $flag = 1;
        $real_start_time = $event_time;
      }

      if($event == "r" && $from  == "2" && $to =="3" && $fid=="1" && $flag) {
        $total_pkg_size = $total_pkg_size + $pkg_size;
      }
      $end_time = $event_time;

      }
      close($fh);
    my $throughput = ($total_pkg_size * 8) / (($end_time - $real_start_time) * 1000000);
    print $result.": ".$throughput."\n";

    $counter = $counter + 1;
  }
  $start_time++;
  $end_time++;
  $cbr_rate = $cbr_rate + 0.5 ;

}
